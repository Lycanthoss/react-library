{"version":3,"sources":["LocalStorage.js","index.js"],"names":["storageAvailable","localStorage","setItem","removeItem","e","saveToStorage","bookArray","newStorage","JSON","stringify","console","log","BookObject","title","author","pages","status","this","InputWindow","props","state","quit","handleChange","bind","handleSubmit","target","value","name","checked","setState","submitCall","handleBookAdd","undefined","id","onClick","icon","faTimesCircle","className","type","placeholder","onChange","min","React","Component","Book","book","bookObj","handleReadClick","faCheckSquare","handleDeleteClick","faTrashAlt","Library","books","getItem","Storage","stored","parse","addBook","setBookAdd","index","findIndex","x","splice","push","items","slice","map","key","faPlusSquare","Main","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.313fe60a.chunk.js","sourcesContent":["const BOOKSTORAGEKEY = \"books\";\r\n\r\nfunction storageAvailable() {\r\n    try {\r\n        localStorage.setItem(\"test\", \"test\");\r\n        localStorage.removeItem(\"test\");\r\n\r\n        return true;\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction initStorage() {\r\n    if (storageAvailable()) {\r\n        if (localStorage.getItem(BOOKSTORAGEKEY) === null) {\r\n            let newStorage = {\r\n                [BOOKSTORAGEKEY]: null,\r\n            };\r\n    \r\n            localStorage.setItem(BOOKSTORAGEKEY, JSON.stringify(newStorage));\r\n        }\r\n        return true;\r\n    }\r\n    else {\r\n        console.log(\"Couldn't initialize local storage,\" +\r\n        \"because of something blocking it or because it is already initialized\");\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\n/** @param {Array.<BookObject>} bookArray */\r\nfunction saveToStorage(bookArray) {\r\n    if (storageAvailable) {\r\n        let newStorage = {\r\n            [BOOKSTORAGEKEY]: bookArray,\r\n        };\r\n\r\n        localStorage.setItem(BOOKSTORAGEKEY, JSON.stringify(newStorage));\r\n    }\r\n    else {\r\n        console.log(\"Couldn't save to storage.\");\r\n    }\r\n}\r\n\r\nfunction getBooksFromStorage() {\r\n    return JSON.parse(localStorage.getItem(BOOKSTORAGEKEY)).books;\r\n}\r\n\r\nexport { storageAvailable, initStorage, saveToStorage, getBooksFromStorage };","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport * as Storage from './LocalStorage'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckSquare, faTrashAlt, faPlusSquare, faTimesCircle } from '@fortawesome/free-regular-svg-icons'\r\n\r\n/** @param {string} title\r\n *  @param {string} author\r\n *  @param {string} pages\r\n *  @param {boolean} status\r\n */\r\nfunction BookObject(title, author, pages, status) {\r\n    this.title = title;\r\n    this.author = author;\r\n    this.pages = pages;\r\n    this.status = status;\r\n}\r\n\r\nclass InputWindow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            author: \"\",\r\n            pages: 0,\r\n            status: false,\r\n            quit: false,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        const target = e.target;\r\n        const value = target.name === \"status\" ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(submitCall) {\r\n        if (submitCall === null) {\r\n            this.props.handleBookAdd(null);\r\n            this.setState({quit: true,});\r\n        }\r\n        else if (this.state.title !== \"\" && this.state.author !== \"\" && this.state.pages !== undefined) {\r\n            this.props.handleBookAdd(new BookObject(this.state.title, this.state.author, this.state.pages, this.state.status));\r\n            this.setState({quit: true,});\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.quit) {\r\n            return null;\r\n        }\r\n        else {\r\n            return (\r\n                <div id=\"input-window\">\r\n                    <button id=\"input-window-cancel\" onClick={this.handleSubmit.bind(this, null)}>\r\n                        <FontAwesomeIcon icon={faTimesCircle} />\r\n                    </button>\r\n                    <div className=\"input\">\r\n                        <label>\r\n                            Title: \r\n                            <input \r\n                                name=\"title\"\r\n                                type=\"text\"\r\n                                placeholder=\"What's the title of the book?\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.title}\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            Author:\r\n                            <input \r\n                                name=\"author\"\r\n                                type=\"text\"\r\n                                placeholder=\"What's the name of the author?\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.author}\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            Page Count:\r\n                            <input \r\n                                name=\"pages\"\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.pages}\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            Reading Status:\r\n                            <input \r\n                                name=\"status\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.status}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </label>\r\n                        <button className=\"submit-button\" onClick={this.handleSubmit.bind(this, true)}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass Book extends React.Component {\r\n    render() {\r\n        /** @type {BookObject} */\r\n        const book = this.props.bookObj;\r\n\r\n        return (\r\n            <div className=\"book\" >\r\n                <h2>{book.title}</h2>\r\n                <p>Author: {book.author}</p>\r\n                <p>Page Count: {book.pages}</p>\r\n                <p>Status: {book.status ? \"Reading\" : \"Finished\"}</p>\r\n                <div className=\"book-buttons\">\r\n                    <button className=\"read-button\" onClick={() => this.props.handleReadClick(book.title)} >\r\n                        <FontAwesomeIcon icon={faCheckSquare} />\r\n                    </button>\r\n                    <button className=\"delete-button\" onClick={() => this.props.handleDeleteClick(book.title)} >\r\n                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Library extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let books;\r\n\r\n        if (Storage.initStorage()) {\r\n            let stored = Storage.getBooksFromStorage();\r\n            books = stored ? stored : [];\r\n        }\r\n        else books = [];\r\n\r\n        this.state = {\r\n            /** @type {Array.<BookObject>} */\r\n            books: books,\r\n            addBook: false,\r\n        };\r\n\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n        this.handleReadClick = this.handleReadClick.bind(this);\r\n        this.handleBookAdd = this.handleBookAdd.bind(this);\r\n        this.setBookAdd = this.setBookAdd.bind(this);\r\n    }\r\n\r\n    handleDeleteClick(title) {\r\n        const books = [...this.state.books];\r\n        const index = books.findIndex((x) => x.title === title);\r\n        if (index !== -1) {\r\n            books.splice(index, 1);\r\n            this.setState({books: books,});\r\n        }\r\n        Storage.saveToStorage(books);\r\n    }\r\n    handleReadClick(title) {\r\n        const books = [...this.state.books];\r\n        const index = books.findIndex((x) => x.title === title);\r\n        if (index !== -1) {\r\n            books[index].status = !books[index].status;\r\n            this.setState({books: books,});\r\n        }\r\n        Storage.saveToStorage(books);\r\n    }\r\n\r\n    handleBookAdd(bookObj) {\r\n        if (bookObj === null) {\r\n            this.setState({addBook: false,});\r\n        }\r\n        else {\r\n            const books = [...this.state.books];\r\n            books.push(bookObj);\r\n            this.setState({books: books, addBook: false,});\r\n            Storage.saveToStorage(books);\r\n        }\r\n    }\r\n\r\n    setBookAdd() {\r\n        this.setState({addBook: true});\r\n    }\r\n\r\n    render() {\r\n        /** @type {Array.<BookObject>} */\r\n        const books = this.state.books.slice();\r\n        const items = books.map((book) =>\r\n            <Book key={book.title} bookObj={book} handleDeleteClick={this.handleDeleteClick} handleReadClick={this.handleReadClick} />\r\n        );\r\n\r\n        return (\r\n            <div className=\"library\">\r\n                {this.state.addBook && <InputWindow handleBookAdd={this.handleBookAdd} />}\r\n                {items}\r\n                <button className=\"book-adder\" onClick={this.setBookAdd}>\r\n                    <FontAwesomeIcon icon={faPlusSquare} />\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <header>\r\n                    <h1>Your library</h1>\r\n                </header>\r\n                <Library />\r\n                <footer>\r\n                    Made by Rokas Simonavičius<a href=\"https://github.com/Lycanthoss\">(@Lycanthoss GitHub) </a> using the React framework\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Main/>, document.getElementById(\"root\")\r\n);"],"sourceRoot":""}